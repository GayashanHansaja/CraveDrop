events {}

http {
    # Rate Limiting (5 requests per second per IP)
    limit_req_zone $binary_remote_addr zone=api:10m rate=5r/s;

    upstream user_service {
        server user-service:3000;
    }

    upstream notification_service {
        server notification-service:3000;
    }

    upstream order_service {
        server order-service:5000;
    }

    upstream payment_service {
        server payment-service:5000;
    }

    server {
        listen 5000;
        server_name localhost;

        # User Service
        location /api/user/ {
            rewrite ^/api/user/(.*)$ /user/$1 break;
            proxy_pass http://user_service/;
            limit_req zone=api burst=10;

            # CORS headers
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Credentials "true" always;
            add_header Access-Control-Allow-Headers "Authorization, Content-Type" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        }

        # Notification Service
        location /api/notify/ {
            rewrite ^/api/notify/(.*)$ /notify/$1 break;
            proxy_pass http://notification_service/;
            error_page 401 = /unauthorized;

            # CORS headers
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Credentials "true" always;
            add_header Access-Control-Allow-Headers "Authorization, Content-Type" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        }

        # Order Service
        location /api/orders/ {
            rewrite ^/api/orders/(.*)$ /orders/$1 break;
            proxy_pass http://order_service/;
            limit_req zone=api burst=10;

            # CORS headers
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Credentials "true" always;
            add_header Access-Control-Allow-Headers "Authorization, Content-Type" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        }

        # Payment Service
        location /api/payments/ {
            rewrite ^/api/payments/(.*)$ /orders/$1 break;
            proxy_pass http://payment__service/;
            limit_req zone=api burst=10;

            # CORS headers
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Credentials "true" always;
            add_header Access-Control-Allow-Headers "Authorization, Content-Type" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        }

        location = /unauthorized {
            return 401;
        }
    }
}
